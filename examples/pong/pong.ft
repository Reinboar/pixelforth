INCLUDE" gb-prelude.ft"
INCLUDE" struct.ft"

INCBIN" examples/pong/pong_tiles.bin" 
VARIABLE: PONG-TILES !
VARIABLE: PONG-SIZE !

INCBIN" examples/pong/score_tiles.bin"
VARIABLE: SCORE-TILES !
VARIABLE: SCORE-SIZE !

INCBIN" examples/pong/pong_title_bg.bin"
VARIABLE: TITLE-BG-TILES !
VARIABLE: TITLE-BG-TILES-SIZE !

INCBIN" examples/pong/pong_title_bg_map.bin"
VARIABLE: TITLE-BG-MAP !
VARIABLE: TITLE-BG-MAP-SIZE !

INCBIN" examples/pong/pong_title_fg.bin"
VARIABLE: TITLE-FG-TILES !
VARIABLE: TITLE-FG-TILES-SIZE !

INCBIN" examples/pong/pong_title_fg_map.bin"
VARIABLE: TITLE-FG-MAP !
VARIABLE: TITLE-FG-MAP-SIZE !

: SCREEN-OFF
  WAIT-VBLANK
  00h
    LCD-DISABLE
  LCDC C!
;

: SCREEN-ON-GAME
  00h
    LCD-ENABLE
    LCD-OBJ-SIZE-8
    LCD-WINDOW-DISABLE
    LCD-BG-WINDOW-ENABLE
    LCD-OBJ-ENABLE
  LCDC C!
;

: SCREEN-ON-TITLE
  00h
    LCD-ENABLE
    LCD-OBJ-SIZE-8
    LCD-WINDOW-ENABLE
    LCD-BG-WINDOW-ENABLE
    LCD-WINDOW-TILE-MAP-1
    LCD-OBJ-DISABLE
  LCDC C!
  40d WINDOW-Y C!
  1d WINDOW-X C!
;

: LOAD-TITLE-TILES
  E4h BGP C!
  TITLE-BG-TILES-SIZE @ TITLE-BG-TILES @ TILE-PATTERN-2 MEMCPY
  TITLE-BG-MAP-SIZE @ TITLE-BG-MAP @ TILE-MAP-1 MEMCPY
  TITLE-FG-TILES-SIZE @ TITLE-FG-TILES @ TILE-PATTERN-2 TITLE-BG-TILES-SIZE @ + MEMCPY
  TITLE-FG-MAP-SIZE @ TITLE-FG-MAP @ TILE-MAP-2 MEMCPY
;

: LOAD-GAME-TILES
  E4h OBP0 C!
  E4h BGP C!
  PONG-SIZE @ PONG-TILES @ TILE-PATTERN-0 MEMCPY
  SCORE-SIZE @ SCORE-TILES @ TILE-PATTERN-2 MEMCPY
;

CREATE-OAM-BUFFER VARIABLE: PONG-OAM !

: INIT-PONG-OAM
  FFh 00h PONG-OAM @ MEMFILL
;

STRUCT PADDLE
  MEMBER: X
  MEMBER: Y
  MEMBER: SPEED
ENDSTRUCT

STRUCT BALL
  MEMBER: X
  MEMBER: Y
  MEMBER: SPEED-X
  MEMBER: SPEED-Y
  MEMBER: DIR
ENDSTRUCT

CONSTANT: DIR-NW 00h
CONSTANT: DIR-NE 01h
CONSTANT: DIR-SW 02h
CONSTANT: DIR-SE 03h

CREATE-PADDLE VARIABLE: PADDLE-1 !
CREATE-PADDLE VARIABLE: PADDLE-2 !
CREATE-BALL   VARIABLE: BALL !

00h VARIABLE: SCORE-1 !
00h VARIABLE: SCORE-2 !

: INIT-PADDLE-1
  00h PONG-OAM @ OAM-ENTRY
    00h OVER OAM-TILE C!
    PADDLE-1 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-1 @ PADDLE-Y@ OVER OAM-Y C!
    DUP OAM-X-UNFLIP
  DROP
  01h PONG-OAM @ OAM-ENTRY
    01h OVER OAM-TILE C!
    PADDLE-1 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-1 @ PADDLE-Y@ 08h + OVER OAM-Y C!
    DUP OAM-X-UNFLIP
  DROP
;

: INIT-PADDLE-2
  02h PONG-OAM @ OAM-ENTRY
    00h OVER OAM-TILE C!
    PADDLE-2 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-2 @ PADDLE-Y@ OVER OAM-Y C!
    DUP OAM-X-FLIP
  DROP
  03h PONG-OAM @ OAM-ENTRY
    01h OVER OAM-TILE C!
    PADDLE-2 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-2 @ PADDLE-Y@ 08h + OVER OAM-Y C!
    DUP OAM-X-FLIP
  DROP
;

: INIT-PADDLES
  10h  PADDLE-1 @ PADDLE-X!
  50h  PADDLE-1 @ PADDLE-Y!
  02h  PADDLE-1 @ PADDLE-SPEED!
  98h  PADDLE-2 @ PADDLE-X!
  50h  PADDLE-2 @ PADDLE-Y!
  02h  PADDLE-2 @ PADDLE-SPEED!
  INIT-PADDLE-1
  INIT-PADDLE-2
;

: INIT-BALL
  04h PONG-OAM @ OAM-ENTRY
    02h OVER OAM-TILE C!
  DROP
  80d BALL @ BALL-X!
  70d BALL @ BALL-Y!
  02h BALL @ BALL-SPEED-X!
  02h BALL @ BALL-SPEED-Y!
  DIR-SW BALL @ BALL-DIR!
;

: DRAW-BALL
  04h PONG-OAM @ OAM-ENTRY
    BALL @ BALL-X@ OVER OAM-X C!
    BALL @ BALL-Y@ OVER OAM-Y C!
  DROP
;

: DRAW-PADDLE-1
  00h PONG-OAM @ OAM-ENTRY
    PADDLE-1 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-1 @ PADDLE-Y@ OVER OAM-Y C!
  DROP
  01h PONG-OAM @ OAM-ENTRY
    PADDLE-1 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-1 @ PADDLE-Y@ 08h + OVER OAM-Y C!
  DROP
;

: DRAW-PADDLE-2
  02h PONG-OAM @ OAM-ENTRY
    PADDLE-2 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-2 @ PADDLE-Y@ OVER OAM-Y C!
  DROP
  03h PONG-OAM @ OAM-ENTRY
    PADDLE-2 @ PADDLE-X@ OVER OAM-X C!
    PADDLE-2 @ PADDLE-Y@ 08h + OVER OAM-Y C!
  DROP
;

: BCD+ ( a b -- c )
  ASM`
    PopD
    PopD
    ld l,a
    PopD
    PopD
    add l
    daa
    ld l,a
    ld h,0
    PushD16
    jp Next
  `
;

: XY-TO-SCREEN ( x y -- addr )
  5d SWAP << + 9800h +
;

: DRAW-SCORE-DIGIT ( n x y -- )
  XY-TO-SCREEN 2DUP SWAP 1d SWAP << SWAP C!
  20h + SWAP 1d SWAP << 1d + SWAP C!
;

: DRAW-SCORE-1
  SCORE-1 @ DUP
  0Fh & 2d 0d WAIT-VBLANK DRAW-SCORE-DIGIT
  F0h & 4d SWAP >> 1d 0d WAIT-VBLANK DRAW-SCORE-DIGIT
;

: DRAW-SCORE-2
  SCORE-2 @ DUP
  0Fh & 12h 0d WAIT-VBLANK DRAW-SCORE-DIGIT
  F0h & 4d SWAP >> 11h 0d WAIT-VBLANK DRAW-SCORE-DIGIT
;

: DRAW-SCORES
  DRAW-SCORE-1
  DRAW-SCORE-2
;

: PADDLE-1-INC-POS! ( speed -- )
  PADDLE-1 @ PADDLE-Y@ + PADDLE-1 @ PADDLE-Y!
;

: PADDLE-1-DEC-POS! ( speed -- )
  PADDLE-1 @ PADDLE-Y@ SWAP - PADDLE-1 @ PADDLE-Y!
;

: PADDLE-2-INC-POS! ( speed -- )
  PADDLE-2 @ PADDLE-Y@ + PADDLE-2 @ PADDLE-Y!
;

: PADDLE-2-DEC-POS! ( speed -- )
  PADDLE-2 @ PADDLE-Y@ SWAP - PADDLE-2 @ PADDLE-Y!
;

: BOUNCE-BALL-X!
  BALL @ BALL-DIR@
    DUP DIR-NW = [ DIR-NE BALL @ BALL-DIR! ] WHEN
    DUP DIR-NE = [ DIR-NW BALL @ BALL-DIR! ] WHEN
    DUP DIR-SW = [ DIR-SE BALL @ BALL-DIR! ] WHEN
    DUP DIR-SE = [ DIR-SW BALL @ BALL-DIR! ] WHEN
  DROP
;

: BOUNCE-BALL-Y!
  BALL @ BALL-DIR@
    DUP DIR-NW = [ DIR-SW BALL @ BALL-DIR! ] WHEN
    DUP DIR-NE = [ DIR-SE BALL @ BALL-DIR! ] WHEN
    DUP DIR-SW = [ DIR-NW BALL @ BALL-DIR! ] WHEN
    DUP DIR-SE = [ DIR-NE BALL @ BALL-DIR! ] WHEN
  DROP
;

: UPDATE-PADDLE-1
  READ-JOYPAD
    DUP JOYPAD-B & 
      [ 04h PADDLE-1 @ PADDLE-SPEED! ] 
      [ 02h PADDLE-1 @ PADDLE-SPEED! ] 
    IF
    DUP JOYPAD-UP &   [ PADDLE-1 @ PADDLE-SPEED@ PADDLE-1-DEC-POS! ] WHEN
    DUP JOYPAD-DOWN & [ PADDLE-1 @ PADDLE-SPEED@ PADDLE-1-INC-POS! ] WHEN
  DROP
;

: UPDATE-PADDLE-2
  PADDLE-2 @ PADDLE-Y@ 8d + 
  BALL @ BALL-Y@ 4d +
    2DUP > [ 2d PADDLE-2-DEC-POS! ] WHEN
    2DUP < [ 2d PADDLE-2-INC-POS! ] WHEN
  2DROP
;

: BALL-POS! ( x y -- )
  BALL @ BALL-Y! BALL @ BALL-X!
;

: BETWEEN? ( n a b -- a<n<b? )
  YONDER SWAP < -ROT
  > AND
;

: CHECK-BALL-PADDLE-COLLISION
  BALL @ BALL-DIR@
    DUP DIR-NW = OVER DIR-SW = OR
      [
        BALL @ BALL-X@ 01h + PADDLE-1 @ PADDLE-X@ DUP 08h + BETWEEN?
        BALL @ BALL-Y@ 01h + PADDLE-1 @ PADDLE-Y@ 02h - PADDLE-1 @ PADDLE-Y@ 12h + BETWEEN? AND
          [ BOUNCE-BALL-X! ]
        WHEN
        ] [ \ ELSE BALL-DIR == DIR-NE OR DIR-SE
        BALL @ BALL-X@ 01h + PADDLE-2 @ PADDLE-X@ DUP 07h - SWAP BETWEEN?
        BALL @ BALL-Y@ 01h + PADDLE-2 @ PADDLE-Y@ 02h - PADDLE-2 @ PADDLE-Y@ 12h + BETWEEN? AND
          [ BOUNCE-BALL-X! ]
        WHEN
      ] 
    IF
  DROP
;

: SCORE-PLAYER-1 ( -- )
  SCORE-1 DUP @ 1d BCD+ SWAP !
  DRAW-SCORE-1
;

: SCORE-PLAYER-2 ( -- )
  SCORE-2 DUP @ 1d BCD+ SWAP !
  DRAW-SCORE-2
;

: RESET-SCORES ( -- )
  00h SCORE-1 !
  00h SCORE-2 !
;

: CHECK-BALL-WALL-COLLISION
  BALL @ BALL-X@ DUP 9d <
    [ SCORE-PLAYER-2 80d 70d BALL-POS! ] WHEN
  159d >
    [ SCORE-PLAYER-1 80d 70d BALL-POS! ] WHEN
;

: CHECK-BALL-FLOOR-COLLISION
  BALL @ BALL-Y@ DUP 17d <
    [ BOUNCE-BALL-Y! ] WHEN
  151d >
    [ BOUNCE-BALL-Y! ] WHEN
;

: CHECK-FOR-WINNER ( -- )
  SCORE-1 @ 20h > [ ] WHEN
  SCORE-2 @ 20h > [ ] WHEN
;

: UPDATE-BALL
  BALL @ BALL-DIR@
    DUP DIR-NW = [ BALL @ BALL-X@ BALL @ BALL-SPEED-X@ - BALL @ BALL-Y@ BALL @ BALL-SPEED-Y@ - BALL-POS! ] WHEN
    DUP DIR-NE = [ BALL @ BALL-X@ BALL @ BALL-SPEED-X@ + BALL @ BALL-Y@ BALL @ BALL-SPEED-Y@ - BALL-POS! ] WHEN
    DUP DIR-SW = [ BALL @ BALL-X@ BALL @ BALL-SPEED-X@ - BALL @ BALL-Y@ BALL @ BALL-SPEED-Y@ + BALL-POS! ] WHEN
    DUP DIR-SE = [ BALL @ BALL-X@ BALL @ BALL-SPEED-X@ + BALL @ BALL-Y@ BALL @ BALL-SPEED-Y@ + BALL-POS! ] WHEN
  DROP
  CHECK-BALL-PADDLE-COLLISION
  CHECK-BALL-FLOOR-COLLISION
  CHECK-BALL-WALL-COLLISION
;

: ENABLE-TITLE-HBLANK-HANDLER
  ASM`
    ld a, 104
    ld [rLYC], a
    ld a,[rSTAT]
    set 6,a
    ld [rSTAT],a
    ld a, [rIE]
    set 1, a
    ld [rIE], a
    ei
    jr :+
    PUSHS
    SECTION "HBLANK-HANDLER", ROM0[$48]
    hblank_jumper:
     jp hblank_handler 
    POPS
    hblank_handler:
      push af
      ld a, [rLCDC]
      res 5,a
      ld [rLCDC], a
      pop af
      reti
    :
    jp Next
  `
;

: SCROLL-SCREEN
  ASM`
    ld a, [rLCDC]
    set 5, a
    ld [rLCDC], a
    jp Next
  `
  1d + DUP SCREEN-Y C! DUP SCREEN-X C!
;

: TITLE-SCREEN-LOOP
  00h
  [
    SCROLL-SCREEN WAIT-VBLANK
    READ-JOYPAD JOYPAD-START = NOT
  ] WHILE
;

SCREEN-OFF
  LOAD-TITLE-TILES
SCREEN-ON-TITLE

ENABLE-TITLE-HBLANK-HANDLER
TITLE-SCREEN-LOOP

SCREEN-OFF
  0d SCREEN-Y C! 0d SCREEN-X C!
  LOAD-GAME-TILES
  400h 40h 9800h MEMFILL
  INIT-PONG-OAM INIT-BALL INIT-PADDLES
  DRAW-BALL DRAW-PADDLE-1 DRAW-PADDLE-2
SCREEN-ON-GAME

DRAW-SCORES

[ 
  UPDATE-PADDLE-1 UPDATE-PADDLE-2 UPDATE-BALL
  DRAW-PADDLE-1 DRAW-PADDLE-2 DRAW-BALL
  PONG-OAM @ START-OAM-DMA
  TRUE
] WHILE

